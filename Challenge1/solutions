using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

namespace CodingChallenge
{
	public static class Solutions
	{
		public static string[] Challenge1(string path)
		{
			List<string> words = new List<string>();
			StreamReader sr = new StreamReader(path);
			while(!sr.EndOfStream)
				words.Add(sr.ReadLine());

			return words.ToArray();
		}

		public static string Challenge2(string[] array)
		{
			if (array is null) return null;
			if (array.Length == 0) return null;

			Random r = new Random();
			string word = array[r.Next(0, array.Length)];
			return word;
		}

		public static InputValidation? Challenge3(string input, string[] validInputs)
		{
			if (input is null || validInputs is null) return null;
			if (input.Length != 5) return InputValidation.InvalidLength;
			if (!validInputs.Contains(input)) return InputValidation.NonExistent;
			return InputValidation.Correct;
		}

		public static CharacterPosition? Challenge4(char chr, int index, string str)
		{
			if (index < 0 || str is null) return null;
			if (index >= str.Length) return null;

			if (chr == str[index]) return CharacterPosition.Correct;
			if (str.Contains(chr)) return CharacterPosition.Misplaced;
			return CharacterPosition.Wrong;
		}
    }
}